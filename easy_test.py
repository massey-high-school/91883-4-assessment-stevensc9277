# Final working quiz
# To do
# Assemble all components
# Get someone to test program
# Change if needed
import random
import math 
import time   # I thought this would look cool
import os
from textwrap3 import wrap

# Statement generator
def math_statement(statement, char):
    print()
    print(char * len(statement))
    print(statement)
    print(char * len(statement))
    print()

# Number checker function
def num_check(question, low=None, high=None):
    # sets up error messages
    if low is not None and high is not None:
        error = "Please enter an integer between {} and {} " \
                "(inclusive)".format(low, high)
    elif low is not None and high is None:
        error = "Please enter an integer that is more than or " \
                "equal to {}".format(low)
    elif low is None and high is not None:
        error = "Please enter an integer that is less than or " \
                "equal to {}".format(high)
    else:
        error = "Please enter an integer"

    while True:

        try:
            response = int(input(question))
            # Checks response is not too low
            if low is not None and response < low:
                print(error)
                continue

            # Checks response is not too high
            if high is not None and response > high:
                print(error)
                continue

            return response

        except ValueError:
            print(error)
            continue

# answer checking function (compare dis and input)
def ans_check(question, equal, lower, higher):
  global incorrect    # Prevents the UnboundLocalError
  error = "That is incorrect"
  display = "Discriminant was {:.0f}".format(dis)
  while True:
      try:
        response = input("What is the discriminant? ").lower()
        if response in equal and dis == 0:
          print("Correct!")
          print()
          return response
        elif response in lower and dis < 0:
          print("Correct!")
          print()
          return response
        elif response in higher and dis > 0:
          print("Correct!")
          print()
          return response
        elif response == "a":
          print("The formula is: b^2 - 4ac")
        else:
          print(error)
          num_list.append(start)
          wrong_list.append(equation)
          answer.append(display)
          incorrect += 1
          print()
          return response
      except ValueError:
        print(error)


equal = ["=", "equal", "e"]   # Used if discriminant is 0
lower = ["<", "lower", "l"]   # Used if discriminant is < 0
higher = [">", "higher", "h"]   # Used if discriminant is > 0
answer = []   # Collect discriminant values
wrong_list = []   # Collect incorrect questions
num_list = []
start = 1
incorrect = 0
# Basic introduction and explanation
text = 'Hello user! Thank you for agreeing to take this test. In this test, you are expected to find the discriminant of an equation generated by the program using the formula: b^2 - 4ac. At any time you may forget the formula, type "a" or "A"...'
# Format paragraphs (improves aesthetics)
x = wrap(text, 39)
for i in range(len(x)):
    print(x[i])
print()
# What is the discriminant?
text_2 = 'If you are wondering, the discriminant tells us whether there are two solutions, one solution, or no solutions for finding the values of x or any other variable in a quadratic equation. For example, 2x^2 + 4x + 2 = 0. The discriminant (using the formula b^2 - 4ac) is 0, therefore x has only one possible value. If asked a question like this, you would be expected to type "e" ,"equal" or "=" since the discriminant is equal to 0.'
x = wrap(text_2, 41)
for i in range(len(x)):
  print(x[i])
print()
# Show user how to answer questions
text_3 = 'When answering a question please type either <, > or =. You may also use "equal", "lower", "higher" or just the first letters of each option.'
x = wrap(text_3, 39)
for i in range(len(x)):
  print(x[i])
print()
# Loops program if wanted
keep_going = ""
while keep_going == "":
  # Get number of questions
  max_question = num_check("How many questions would you like to do? ", 5, 50)
  # Ask user to get ready (For fun)
  print("Generating questions. Please get ready...")
  time.sleep(3)
  for item in range(0, max_question):
    num_1 = random.randint(0, 9)
    num_2 = random.randint(0, 9)
    num_3 = random.randint(2, 9)
    # Display round number and max
    rounds = math_statement("- Question {} of {} -".format(start, max_question), "-")
    # Display question to solve (find discriminant) but replace 1 with blank
    equation = "{}x^2 + {}x + {} = 0".format(num_1, num_2, num_3)
    print(equation.replace("1", ""))
    dis = math.pow(num_2, 2) - 4 * (num_1 * num_3)  
    # Get user input (answer)
    user_input = ans_check("What is the discriminant? ", equal, lower, higher)
    start += 1

  # Find number of questions answered correctly
  correct = max_question - incorrect
  print("Finding incorrect questions. Please wait...")    # I only put this in because I thought it was cool
  time.sleep(2.5)
  if correct != max_question:
    print("It seems that you got a question(s) wrong...")
    time.sleep(2)
    print()
    # Print incorrect questions
    to_show = zip(num_list, wrong_list, answer)
    for item in to_show:
      print(*item, sep = " | \t ")
  else:
    # No incorrect questions answered
    print("No incorrect questions found...üëç")
  print()
  # Print percentage of questions answered correctly
  score = math_statement("* You scored {:.0f}%  *".format(correct/max_question * 100), "*")
  # Ask user if they would like to do the test again
  keep_going = input("Press <enter> to take the test again or any key to quit. ")
  # Clear console and lists (Clearing console was to improve aesthetics)
  if keep_going == "":
    clear = lambda: os.system('clear')    # Clears console; better aesthetics
    clear()
    start = 1
    incorrect = 0
    num_list = []
    wrong_list = []
    answer = []
print()
# End message
print("Thank you for finishing the test. Keep studying o(*^‚ñΩ ^*)‚îõ")
